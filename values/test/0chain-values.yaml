serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

zminer: false #Enable to make the deployment for 0miners

magicBlockFromPath: false #Enable it to use the magic block from file instead of config map
affinity:
  sharder:
    distributeEvenly: false #Enable this to equally distribute the sharders over to the nodes.
    storageOptimize: false #Enable this to schedule the sharders preferrablly over to the nodes with labels bound:high-storage.
  miner:
    distributeEvenly: false #Enable this to equally distribute the miners over to the nodes.
    cpuOptimize: false #Enable this to schedule the miners preferrablly over to the nodes with labels bound:high-cpu.
nodeCount: 1

sharder:
  sharderCount: 2
  replicaCount: 1

  hostName: helm
  host: 0chain.net

  minioConfig:
    bucketUrl: s3.amazonaws.com
    accessKeyId: ajkfjasdfsdv
    secretAccessKey: davddcasdc
    bucketName: sharder
    bucketRegion: us-east-2

  image:
    repository: 0chaindev/sharder
    pullPolicy: Always
    tag: staging

  imagePullSecrets: 
    - name: regcred

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  env:
    DOCKER: "true"
  
  resources:
    requests:
      cpu: "512m"
      memory: "750Mi"
    limits:
      cpu: "1500m"
      memory: "1500Mi"

  service:
    type: NodePort
    port: 311
    nodePort: 311

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  ############## Sharder FileBeat ################
  promtailImage:
    repository: grafana/promtail
    tag: master

  promtailResources:
    requests:
      cpu: "50m"
      memory: "50Mi"
    limits:
      cpu: "100m"
      memory: "100Mi"

  ################# Cassandra ################
  cassandraImage:
    repository: cassandra
    tag: "3.11.4"

  cassandraResources:
    requests:
      cpu: "256m"
      memory: "512Mi"
    limits:
      cpu: "512m"
      memory: "1.5Gi"

  cassandraEnv:
    MAX_HEAP_SIZE: "512M"
    HEAP_NEWSIZE: "100M"

  cassandraService:
    port: 9042
    targetPort: 9042
    protocol: TCP

  cassandraAutoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  
  ################# Cassandra Init ################
  cassandraInitImage:
    repository: cassandra
    tag: latest

  cassandraInitResources:
    requests:
      cpu: "50m"
      memory: "100Mi"
    limits:
      cpu: "400m"
      memory: "1Gi"

  ################# Postgres ################
  postgresImage:
    repository: postgres
    tag: 14

  postgresResources:
    requests:
      cpu: "128m"
      memory: "512Mi"
    limits:
      cpu: "256m"
      memory: "1024Mi"

  postgresEnv:
    POSTGRES_PORT: "5432"
    POSTGRES_USER: postgres
    POSTGRES_HOST_AUTH_METHOD: trust

  postgresService:
    port: 5432
    protocol: TCP

  postgressAutoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  
  ################# PV & PVC ################
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    storageClassName: openebs-hostpath
    ## rabbitmq data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    
    ######### PV HostPath ###########
    pvHostPath: "/mnt/kubernetes/"

    ####### PV #######
    storageClassNameData: sharder-data-pv-
    accessModeDataPv: ReadWriteOnce
    storageData: 30Gi

    storageClassNameLog: sharder-log-pv-
    accessModeLogPv: ReadWriteOnce
    storageLog: 3Gi

    storageClassNameProm: sharder-promtail-run-
    accessModePromPv: ReadWriteOnce
    storageProm: 3Gi

    storageClassNamePG: sharder-postgres-data-
    accessModePGPv: ReadWriteOnce
    storagePG: 30Gi

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}
  config:
    zchain01:
      delegate_wallet: ""
    zchain02:
      delegate_wallet: ""

miner:
  minerCount: 3
  replicaCount: 1

  hostName: helm
  host: 0chain.net

  image:
    repository: 0chaindev/miner
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: staging

  imagePullSecrets: 
    - name: regcred

  nameOverride: ""

  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  env:
    DOCKER: "true"
  
  resources:
    requests:
      cpu: "500m"
      memory: "500Mi"
    limits:
      cpu: "1250m"
      memory: "1000Mi"

  service:
    port: 312
    targetPort: 312
    nodePort: 312
    type: NodePort

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  
  ############## Miner PromTail ################
  promtailImage:
    repository: grafana/promtail
    tag: master

  promtailResources:
    requests:
      cpu: "50m"
      memory: "50Mi"
    limits:
      cpu: "100m"
      memory: "100Mi"

  ################# Redis ################
  redisImage:
    repository: redis
    tag: alpine

  redisResources:
    requests:
      cpu: "128m"
      memory: "512Mi"
    limits:
      cpu: "256m"
      memory: "1024Mi"

  redisService:
    protocol: TCP
    port: 6379
    targetPort: 6379

  redisAutoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  ################# redis TXN ################
  redisTxnImage:
    repository: redis
    tag: alpine

  redisTxnResources:
    requests:
      cpu: "128m"
      memory: "256Mi"
    limits:
      cpu: "256m"
      memory: "512Mi"

  redisTxnService:
    protocol: TCP
    port: 6379
    targetPort: 6379

  redisTxnAutoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75

  # nodeSelector: {}

  # tolerations: []

  # affinity: {}

  ################# PV & PVC ################
  persistence:
    enabled: false

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:
    storageClassName: openebs-hostpath

    ## rabbitmq data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)

    ######### PV HostPath ###########
    pvHostPath: "/mnt/kubernetes/"

    ############### PV ##############
    storageClassNameData: miner-data-pv-
    accessModeDataPv: ReadWriteOnce
    storageData: 30Gi

    storageClassNameLog: miner-log-pv-
    accessModeLogPv: ReadWriteOnce
    storageLog: 3Gi

    storageClassNameProm: miner-promtail-run-
    accessModePromPv: ReadWriteOnce
    storageProm: 3Gi
  
  config:
    zchain01:
      delegate_wallet: ""
    zchain02:
      delegate_wallet: ""
    zchain03:
      delegate_wallet: ""
    zchain04:
      delegate_wallet: ""

commonConf:
  zchainUp:
    version: 1.0
    logging:
      level: "debug"
      console: false # printing log to console is only supported in development mode
      goroutines: false
      memlog: false
    development:
      state: true
      dkg: true
      view_change: false
      block_rewards: true
      smart_contract:
        storage: true
        faucet: true
        zrc20: true
        interest: true
        fee: false
        miner: true
        multisig: true
        vesting: true
        magma: false #set true to enable magma
        zcn: true        
      txn_generation:
        wallets: 50
        transactions: 70
        pour_point: 100
        pour_amount: 10000
        max_transactions: 0
        max_txn_fee: 1000
        min_txn_fee: 0
        max_txn_value: 10000000000
        min_txn_value: 100
      faucet:
        refill_amount: 1000000000000000
    zerochain:
      id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
      decimals: 10
      genesis_block:
        id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"
    server_chain:
      id: "0afc093ffb509f059c55478bc1a60351cef7b4e9c008a53a6cc8241ca8617dfe"
      owner: "edb90b850f2e7e7cbd0a1fa370fdcc5cd378ffbec95363a7bc0e5a98b8ba5759"
      decimals: 10
      tokens: 200000000
      genesis_block:
        id: "ed79cae70d439c11258236da1dfa6fc550f7cc569768304623e8fbd7d70efae4"
      block:
        min_block_size: 1
        max_block_size: 10
        max_block_cost: 10000
        max_byte_size: 1638400
        generators: 2
        min_generators: 2
        generators_percent: 0.2
        replicators: 0
        generation:
          timeout: 15
          retry_wait_time: 5 #milliseconds
        proposal:
          max_wait_time: 180ms # milliseconds
          wait_mode: static # static or dynamic
        consensus:
          threshold_by_count: 66 # percentage (registration)
          threshold_by_stake: 0 # percent
        sharding:
          min_active_sharders: 25 # percentage
          min_active_replicators: 25 # percentage
        validation:
          batch_size: 1000
        reuse_txns: false
        storage:
          provider: blockstore.FSBlockStore # blockstore.FSBlockStore or blockstore.BlockDBStore
      round_range: 10000000
      round_timeouts:
        softto_min: 1500 #in miliseconds
        softto_mult: 1 #multiples of mean network time (mnt)  softto = max{softo_min, softto_mult * mnt}
        round_restart_mult: 10 #number of soft timeouts before round is restarted
        timeout_cap: 1 # 0 indicates no cap
        vrfs_timeout_mismatch_tolerance: 5
      transaction:
        payload:
          max_size: 98304 # bytes
        timeout: 600 # seconds
        min_fee: 0
        exempt:
          - add_miner
          - miner_health_check
          - add_sharder
          - sharder_health_check
          - contributeMpk
          - sharder_keep
          - shareSignsOrShares
          - wait
      client:
        signature_scheme: bls0chain # ed25519 or bls0chain
        discover: true
      messages:
        verification_tickets_to: all_miners # generator or all_miners
      state:
        prune_below_count: 100 # rounds
        sync:
          timeout: 10 # seconds
      stuck:
        check_interval: 10 # seconds
        time_threshold: 60 #seconds
      smart_contract:
        setting_update_period: 200 #rounds
        timeout: 8000ms # milliseconds
      health_check:
        show_counters: true
        deep_scan:
          enabled: false
          settle_secs: 30s
          window: 0 #Full scan till round 0
          repeat_interval_mins: 3m #minutes
          report_status_mins: 1m #minutes
          batch_size: 50
        proximity_scan:
          enabled: true
          settle_secs: 30s
          window: 100000 #number of blocks, Do not make 0 with minio ON, Should be less than minio old block round range
          repeat_interval_mins: 1m #minutes
          report_status_mins: 1m #minutes
          batch_size: 50
      lfb_ticket:
        rebroadcast_timeout: "15s"  #
        ahead: 5                    # should be >= 5
        fb_fetching_lifetime: "10s" #
      async_blocks_fetching:
        max_simultaneous_from_miners: 100 
        max_simultaneous_from_sharders: 30 
      dbs:
        events:
          enabled: true
          name: events_db
          user: zchain_user
          password: zchian
          host: helm-sharder-postgres-01 #localhost
          port: 5432
          max_idle_conns: 100
          max_open_conns: 200
          conn_max_lifetime: 20s
    network:
      nodes_file: config/single_machine_3_nodes.yaml
      magic_block_file: config/magicBlock.json
      initial_states: config/initial-state.yaml
      genesis_dkg: 0
      dns_url: ""
      relay_time: 200 # milliseconds
      max_concurrent_requests: 40
      timeout:
        small_message: 1000 # milliseconds
        large_message: 3000 # milliseconds
      large_message_th_size: 5120 # anything greater than this size in bytes
      user_handlers:
        rate_limit: 100000000 # 100 per second
      n2n_handlers:
        rate_limit: 10000000000 # 10000 per second
    # delegate wallet is wallet that used to configure node in Miner SC; if its
    # empty, then node ID used
  
  zchainDown:
    # % of fees and rewards for generator
    service_charge: 0.10       # [0; 1) of all fees
    # max number of delegate pools allowed by a node in miner SC
    number_of_delegates: 20   # max number of delegate pools
    # min stake pool amount allowed by node; should not conflict with
    # SC min_stake 
    min_stake: 0.0    # tokens
    # max stake pool amount allowed by node; should not conflict with
    # SC max_stake 
    max_stake: 100.0  # tokens
    # latitude is miner/sharder latitude geolocation
    latitude: 28.644800
    # longitude is miner/sharder longitude geolocation
    longitude: 77.216721
    minio:
      enabled: false # Enable or disable minio backup, Do not enable with deep scan ON
      worker_frequency: 1800 # In Seconds, The frequency at which the worker should look for files, Ex: 3600 means it will run every 3600 seconds
      num_workers: 5 # Number of workers to run in parallel, Just to make execution faster we can have mutiple workers running simultaneously
      use_ssl: false # Use SSL for connection or not
      old_block_round_range: 250000 # How old the block should be to be considered for moving to cloud
      delete_local_copy: true # Delete local copy of block once it's moved to cloud
    cassandra:
      connection:
        delay: 10 # in seconds
        retries: 10
    # integration tests related configurations
    integration_tests:
      # address of the server
      address: host.docker.internal:15210
      # lock_interval used by nodes to request server to connect to blockchain
      # after start
      lock_interval: 1s

  sc:
    smart_contracts:
      faucetsc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        pour_limit: 1
        pour_amount: 1
        max_pour_amount: 10
        periodic_limit: 1000
        global_limit: 100000
        individual_reset: 3h # in hours
        global_reset: 48h # in hours
        cost:
          update-settings: 100
          pour: 100
          refill: 100
      interestpoolsc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        min_lock: 10
        interest_rate: 0.0
        apr: 0.1
        min_lock_period: 1m
        max_lock_period: 8760h
        max_mint: 1500000.0
        cost:
          lock: 100
          unlock: 100
          updateVariables: 100

      minersc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        # miners
        max_n: 7 # 100
        min_n: 3 # 3
        # sharders
        max_s: 2 # 30
        min_s: 1 # 1
        # max delegates allowed by SC
        max_delegates: 200 #
        # DKG
        t_percent: .66 # of active
        k_percent: .75 # of registered
        x_percent: 0.70 # percentage of prev mb miners required to be part of next mb
        # etc
        min_stake: 0.0 # min stake can be set by a node (boundary for all nodes)
        max_stake: 100.0 # max stake can be set by a node (boundary for all nodes)
        start_rounds: 50
        contribute_rounds: 50
        share_rounds: 50
        publish_rounds: 50
        wait_rounds: 50
        # stake interests, will be declined every epoch
        interest_rate: 0.0 # [0; 1)
        # reward rate for generators, will be declined every epoch
        reward_rate: 1.0 # [0; 1)
        # share ratio is miner/block sharders rewards ratio, for example 0.1
        # gives 10% for miner and rest for block sharders
        share_ratio: 0.8 # [0; 1)
        # reward for a block
        block_reward: 0.21 # tokens
        # max service charge can be set by a generator
        max_charge: 0.5 # %
        # epoch is number of rounds before rewards and interest are decreased
        epoch: 15000000 # rounds
        # decline rewards every new epoch by this value (the block_reward)
        reward_decline_rate: 0.1 # [0; 1), 0.1 = 10%
        # decline interests every new epoch by this value (the interest_rate)
        interest_decline_rate: 0.1 # [0; 1), 0.1 = 10%
        # no mints after miner SC total mints reaches this boundary
        max_mint: 1500000.0 # tokens
        # if view change is false then reward round frequency is used to send rewards and interests
        reward_round_frequency: 250
        cooldown_period: 100
        cost:
          add_miner: 100
          add_sharder: 100
          delete_miner: 100
          delete_sharder: 100
          miner_health_check: 100
          sharder_health_check: 100
          contributeMpk: 100
          shareSignsOrShares: 100
          wait: 100
          update_globals: 100
          update_settings: 100
          update_miner_settings: 100
          update_sharder_settings: 100
          payFees: 0
          feesPaid: 100
          mintedTokens: 100
          addToDelegatePool: 100
          deleteFromDelegatePool: 100
          sharder_keep: 100
      storagesc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        # the time_unit is a duration used as divider for a write price; a write
        # price measured in tok / GB / time_unit, where the time_unit is this
        # configuration; for example 1h, 24h (a day), 720h (a month -- 30 days);
        time_unit: "720h"
        min_stake: 0.01 # min stake can be set by a node (boundary for all nodes)
        max_stake: 100.0 # max stake can be set by a node (boundary for all nodes)
        # max_mint
        max_mint: 1500000.0 # tokens, max amount of tokens can be minted by SC
        # min possible allocations size in bytes allowed by the SC
        min_alloc_size: 1024
        # min possible allocation duration allowed by the SC
        min_alloc_duration: "5m"
        # max challenge completion time of a blobber allowed by the SC
        max_challenge_completion_time: "3m"
        # min blobber's offer duration allowed by the SC
        min_offer_duration: "10h"
        # min blobber capacity allowed by the SC
        min_blobber_capacity: 1024
        # max blobbers per allocation
        max_blobbers_per_allocation: 40
        # users' read pool related configurations
        readpool:
          min_lock: 0.1 # tokens
          min_lock_period: 1m
          max_lock_period: 8760h
        # users' write pool related configurations
        writepool:
          min_lock: 0.1 # tokens
          min_lock_period: 2m
          max_lock_period: 8760h
        # stake pool configurations
        stakepool:
          # minimal lock for a delegate pool
          min_lock: 0.1 # tokens
          # interest_rate is tokens earned by a blobber for its stake
          interest_rate: 0.0
          # interest_interval is interval to pay interests for a stake
          interest_interval: 1m
        # following settings are for free storage rewards
        #
        # largest value you can have for the total allowed free storage
        # that a single user can assign
        max_total_free_allocation: 10000
        # maximum setting for the largest number of tokens permitted in
        # a free storage allocation
        max_individual_free_allocation: 100
        # allocation settings for free storage
        # these values are applied to all free allocations
        free_allocation_settings:
          # the free payment is split between read and write pool in the ratio
          # read_pool_fraction : (1-read_pool_fraction)
          read_pool_fraction: 0.2
          data_shards: 10
          parity_shards: 5
          size: 10000000000
          duration: 50h
          read_price_range:
            min: 0.0
            max: 0.04
          write_price_range:
            min: 0.0
            max: 0.04
        # validator_reward represents part of blobbers' rewards goes to validators
        validator_reward: 0.025
        # blobber_slash represents blobber's stake penalty when a challenge not
        # passed
        blobber_slash: 0.10
        # max prices for blobbers (tokens per GB)
        max_read_price: 100.0
        max_write_price: 100.0
        # min_write_price: 0.1
        # allocation cancellation
        #
        # failed_challenges_to_cancel is number of failed challenges of an
        # allocation to be able to cancel an allocation
        failed_challenges_to_cancel: 20
        # failed_challenges_to_revoke_min_lock is number of failed challenges
        # of a blobber to revoke its min_lock demand back to user; only part
        # not paid yet can go back
        failed_challenges_to_revoke_min_lock: 10
        #
        # challenges
        #
        # enable challenges
        challenge_enabled: true
        # number of challenges for MB per minute
        challenge_rate_per_mb_min: 1
        # max number of challenges can be generated at once
        max_challenges_per_generation: 100
        # number of validators per challenge
        validators_per_challenge: 2
        # max delegates per stake pool allowed by SC
        max_delegates: 200
        # max_charge allowed for blobbers; the charge is part of blobber rewards
        # goes to blobber's delegate wallets, other part goes to related stake
        # holders
        max_charge: 0.50
        # reward paid out every block
        block_reward:
          block_reward: 1
          block_reward_change_period: 10000
          block_reward_change_ratio: 0.1
          qualifying_stake: 1
          sharder_ratio: 10
          miner_ratio: 40
          blobber_ratio: 50
          trigger_period: 30
          blobber_capacity_ratio: 10
          blobber_usage_ratio: 40
        expose_mpt: true
        cost:
          update_settings: 100
          read_redeem: 100
          commit_connection: 100
          new_allocation_request: 3000
          update_allocation_request: 2500
          finalize_allocation: 9500
          cancel_allocation: 8400
          add_free_storage_assigner: 100
          free_allocation_request: 1500
          free_update_allocation: 2500
          add_curator: 100
          remove_curator: 100
          blobber_health_check: 100
          update_blobber_settings: 100
          update_validator_settings: 100
          pay_blobber_block_rewards: 100
          curator_transfer_allocation: 100
          challenge_request: 100
          challenge_response: 1600
          add_validator: 100
          add_blobber: 100
          new_read_pool: 100
          read_pool_lock: 100
          read_pool_unlock: 100
          write_pool_lock: 100
          write_pool_unlock: 100
          stake_pool_lock: 100
          stake_pool_unlock: 100
          stake_pool_pay_interests: 100
          commit_settings_changes: 0
          generate_challenge: 100
          blobber_block_rewards: 0
          collect_reward: 100
      vestingsc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        min_lock: 0.01
        min_duration: "2m"
        max_duration: "2h"
        max_destinations: 3
        max_description_length: 20
        cost:
          trigger: 100
          unlock: 100
          add: 100
          stop: 100
          delete: 100
          vestingsc-update-settings: 100
      zcnsc:
        owner_id: 1746b06bb09f55ee01b33b5e2e055d6cc7a900cb57c0a3a5eaabb8a0e7745802
        min_mint: 1
        min_burn: 1
        min_stake: 0
        min_lock: 0
        min_authorizers: 1
        percent_authorizers: 0.7
        max_delegates: 10
        max_fee: 100
        burn_address: "0000000000000000000000000000000000000000000000000000000000000000"
        cost:
          mint: 100
          burn: 100
          add-authorizer: 100
          delete-authorizer: 100
