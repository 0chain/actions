name: Deploy and Test MinIO

description: "Deploy MinIO and run tests against it"

inputs:
  minio_access_key:
    description: "MinIO access key"
    required: true
  minio_secret_key:
    description: "MinIO secret key"
    required: true

runs:
  using: "composite" # This allows you to run a set of actions in sequence
  steps:
    - name: Check if MinIO container exists
      shell: bash
      run: |
        # Check if the MinIO container already exists
        existing_container=$(docker ps -aq -f name=minio)
        if [ -n "$existing_container" ]; then
          echo "MinIO container already exists. Stopping and removing it."
          docker stop minio
          docker rm minio
        fi

    - name: Set up MinIO client with default keys
      run: |
          export MINIO_ACCESS_KEY=${{ inputs.minio_access_key || 'rootroot' }}
          export MINIO_SECRET_KEY=${{ inputs.minio_secret_key || 'rootroot' }}
          echo "Accessing MinIO with keys"

    - name: Deploy MinIO
      shell: bash # Explicitly define the shell
      run: |
        echo "Deploying MinIO server..."
        docker run -d --name minio -p 9000:9000 -p 9001:9001 \
          -e "MINIO_ACCESS_KEY=${{ inputs.minio_access_key }}" \
          -e "MINIO_SECRET_KEY=${{ inputs.minio_secret_key }}" \
          minio/minio server /data --console-address ":9001"

        # Wait for MinIO to start
        echo "Waiting for MinIO to start..."
        sleep 10  # Adjust the sleep time based on your environment

    - name: Run Health Checks
      shell: bash
      run: |
        echo "Running health checks for MinIO at localhost..."
        # Health check for MinIO
        curl -X "GET" "http://localhost:9000/minio/health/live"
        curl -X "GET" "http://localhost:9000/minio/health/ready"
        # Console health check (if applicable)
        curl -X "GET" "http://localhost:9001/minio/health/live"
        curl -X "GET" "http://localhost:9001/minio/health/ready"

        echo "MinIO health checks passed."
