name: CICD_FOR_0CHAIN_NETWORKS

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network name'
        default: 'test'
        required: true

      helmchart:
        description: 'Helm chart'
        default: 'staging'
        required: true

      domain:
        description: 'Domain'
        default: '0chain.net'
        required: true

      reset:
        description: 'Input yes to reset or no to update images. '
        default: 'no'
        required: true

      chain_image:
        description: '0chain DOCKER IMAGE to deploy'
        default: staging

      blobber_image:
        description: 'blobber DOCKER IMAGE to deploy'
        default: staging

      zbox_image:
        description: '0box DOCKER IMAGE to deploy'
        default: 'staging'

      explorer_image:
        description: 'Explorer DOCKER IMAGE to deploy'
        default: 'staging'

      zproxy_image:
        description: '0Proxy DOCKER IMAGE to deploy'
        default: 'staging'

      stakeimage:
        description: 'Blobber stake DOCKER IMAGE to deploy'
        default: staging

jobs:
  deploy:
    runs-on: [self-hosted, testnet]
    env:
      NETWORK=${{ github.event.inputs.network }}
    steps:
      - uses: actions/checkout@v2

      - uses: azure/setup-helm@v1
        with:
          version: 'v3.2.2'

      - uses: azure/setup-kubectl@v1
        id: install

      - name: Setup helm repo
        run: |
          helm repo remove 0chain-helm
          helm repo add 0chain-helm http://0chain-helm-chart.s3-website.us-east-2.amazonaws.com/${{ github.event.inputs.helmchart }}/
          helm repo update

      - name: Setup kubeconfig
        run: |
          mkdir -p ./kube
          echo "${{ secrets[env.NETWORK] }}" | base64 -d > ./kube/${{ github.event.inputs.network }}-config
          
      - name: Cleanup
        if: ${{ github.event.inputs.reset == 'yes' }}
        run: |
          helm list --short -n ${{ github.event.inputs.network }} -a --kubeconfig "./kube/${{ github.event.inputs.network }}-config" | xargs -L1 helm delete -n ${{ github.event.inputs.network }} --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          
          sleep 30

          kubectl delete pvc --all -n ${{ github.event.inputs.network }} --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

      - name: Setup chain
        if: ${{ github.event.inputs.reset == 'yes' }}
        run: |
          helm upgrade --install --wait 0chain -n ${{ github.event.inputs.network }} --set sharder.image.tag=${{ github.event.inputs.chain_image }} --set miner.image.tag=${{ github.event.inputs.chain_image }} -f values/${{ github.event.inputs.network }}/0chain-values.yaml 0chain-helm/zchain --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
     
          helm upgrade --install --wait --timeout 120s 0dns -n ${{ github.event.inputs.network }} --set zdns.host=${{ github.event.inputs.domain}} 0chain-helm/zdns --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait  blobber -n ${{ github.event.inputs.network }} --set blobber.image.tag=${{ github.event.inputs.blobber_image }} --set validator.image.tag=${{ github.event.inputs.blobber_image }} --set blobber.host=${{ github.event.inputs.domain}} --set blobber.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set validator.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns -f values/${{ github.event.inputs.network }}/blobber-values.yaml 0chain-helm/blobber --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait --timeout 120s 0block -n ${{ github.event.inputs.network }} --set zblock.host=${{ github.event.inputs.domain}} 0chain-helm/zblock --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait --timeout 120s explorer -n ${{ github.event.inputs.network }} --set explorer.image.tag=${{ github.event.inputs.explorer_image }} --set explorer.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set explorer.host=${{ github.event.inputs.domain}} 0chain-helm/explorer --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait --timeout 120s 0proxy -n ${{ github.event.inputs.network }} --set zproxy.image.tag=${{ github.event.inputs.zproxy_image }} --set zproxy.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set zproxy.host=${{ github.event.inputs.domain}} 0chain-helm/zproxy --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait --timeout 120s 0box -n ${{ github.event.inputs.network }} --set zbox.image.tag=${{ github.event.inputs.zbox_image }} --set zbox.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set zbox.host=${{ github.event.inputs.domain}} 0chain-helm/zbox --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait --timeout 120s 0search -n ${{ github.event.inputs.network }} --set zsearch.host=${{ github.event.inputs.domain}} 0chain-helm/zsearch --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          helm upgrade --install --wait blobber-stake -n ${{ github.event.inputs.network }} --set blobberStake.blobberCount=6 --set blobberStake.host=${{ github.event.inputs.domain}} --set blobberStake.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set blobberStake.image.tag=${{ github.event.inputs.stakeimage }} 0chain-helm/blobberStake --kubeconfig "./kube/${{ github.event.inputs.network }}-config"

          rm -rf ~/.kube

      - name: Update Image
        if: ${{ github.event.inputs.reset == 'no' }}
        run: |
          if [ "${{ github.event.inputs.chain_image }}" != "staging" ]; then
            helm upgrade --install 0chain -n ${{ github.event.inputs.network }} --set sharder.image.tag=${{ github.event.inputs.chain_image }} --set miner.image.tag=${{ github.event.inputs.chain_image }} -f values/${{ github.event.inputs.network }}/0chain-values.yaml 0chain-helm/zchain --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          fi

          if [ "${{ github.event.inputs.blobber_image }}" != "staging" ]; then
            helm upgrade --install  blobber -n ${{ github.event.inputs.network }} --set blobber.image.tag=${{ github.event.inputs.blobber_image }} --set validator.image.tag=${{ github.event.inputs.blobber_image }} --set blobber.host=${{ github.event.inputs.domain}} --set blobber.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set validator.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns -f values/${{ github.event.inputs.network }}/blobber-values.yaml 0chain-helm/blobber --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          fi  

          if [ "${{ github.event.inputs.explorer_image }}" != "staging" ]; then
            helm upgrade --install explorer -n ${{ github.event.inputs.network }} --set explorer.image.tag=${{ github.event.inputs.explorer_image }} --set explorer.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set explorer.host=${{ github.event.inputs.domain}} 0chain-helm/explorer --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          fi  

          if [ "${{ github.event.inputs.zproxy_image }}" != "staging" ]; then
            helm upgrade --install 0proxy -n ${{ github.event.inputs.network }} --set zproxy.image.tag=${{ github.event.inputs.zproxy_image }} --set zproxy.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set zproxy.host=${{ github.event.inputs.domain}} 0chain-helm/zproxy --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          fi  

          if [ "${{ github.event.inputs.zbox_image }}" != "staging" ]; then
            helm upgrade --install 0box -n ${{ github.event.inputs.network }} --set zbox.image.tag=${{ github.event.inputs.zbox_image }} --set zbox.config.blockWorker=https://${{ github.event.inputs.network }}.${{ github.event.inputs.domain}}/dns --set zbox.host=${{ github.event.inputs.domain}} 0chain-helm/zbox --kubeconfig "./kube/${{ github.event.inputs.network }}-config"
          fi         

          rm -rf ~/.kube