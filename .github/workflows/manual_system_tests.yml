name: "0Chain System Tests"
run-name: "Manual 0Chain System tests checked out from [${{ inputs.system_tests_branch }}"

concurrency:
  group: "manual-system-tests-${{ github.ref }}"
  cancel-in-progress: true

on:
  workflow_call:
    secrets:
      SUBGRAPH_API_URL:
        description: 'API URL of the subgraph, which is used by internal components'
        required: true
      TENDERLY_FORK_ID:
        description: 'Tenderly fork ID is used to use Tenderly fork simulations for bridge tests'
        required: true
      DEVOPS_CHANNEL_WEBHOOK_URL:
        description: 'URL to notify slack if tests fail on staging'
        required: true
      SVC_ACCOUNT_SECRET:
        description: 'A token used for cross-repo actions'
        required: true
      S3_ACCESS_KEY:
        description: 'S3 access key for migration tests'
        required: false
      S3_SECRET_KEY:
        description: 's3 secret key for migration tests'
        required: false
      DEV1KC:
        description: 'dev-1 k8s config'
        required: true
      DEV2KC:
        description: 'dev-2 k8s config'
        required: true
      DEV3KC:
        description: 'dev-3 k8s config'
        required: true
      DEV4KC:
        description: 'dev-4 k8s config'
        required: true
      DEV5KC:
        description: 'dev-5 k8s config'
        required: true
      DEV6KC:
        description: 'dev-6 k8s config'
        required: true
      DEV7KC:
        description: 'dev-7 k8s config'
        required: true
      DEV8KC:
        description: 'dev-8 k8s config'
        required: true
      DEV9KC:
        description: 'dev-9 k8s config'
        required: true
      GRAPHNODE_SC:
        required: true
        description: 'graph node smart contract address.'
      GRAPHNODE_NETWORK:
        required: true
        description: 'graph node network name for example goerli.'
      GRAPHNODE_ETHEREUM_NODE_URL:
        required: true
        description: 'Ethereum node url.'

    inputs:
      repo_snapshots_branch:
        description: 'Branch of repo-snapshots that should be used to select images. Overrides explicit branch params.'
        default: ''
        required: false
        type: string
      system_tests_branch:
        description: 'system_tests branch containing the tests you wish to run'
        default: ''
        required: false
        type: string
      miner_branch:
        description: 'miner branch which the tests will use'
        default: ''
        required: false
        type: string  
      sharder_branch:
        description: 'sharder branch which the tests will use'
        default: ''
        required: false
        type: string   
      zbox_cli_branch:
        description: '0Box CLI branch which the tests will use'
        default: ''
        required: false
        type: string
      zwallet_cli_branch:
        description: '0Wallet CLI branch which the tests will use'
        default: ''
        required: false
        type: string
      blobber_branch:
        description: 'blobber branch to deploy'
        default: ''
        required: false
        type: string
      validator_branch:
        description: 'validator branch to deploy'
        default: ''
        required: false
        type: string
      authorizer_branch:
        description: 'authorizer branch to deploy'
        default: ''
        required: false
        type: string
      zbox_branch:
        description: '0box branch to deploy'
        default: ''
        required: false
        type: string
      zdns_branch:
        description: '0dns branch to deploy'
        default: ''
        required: false
        type: string
      s3_migration_cli_branch:
        description: 's3-migration cli branch to deploy'
        default: ''
        required: false
        type: string
      zs3server_branch:
        description: 'ZS3server branch to deploy'
        default: ''
        required: false
        type: string
      gosdk_branch:
        description: 'gosdk branch to inject into the CLIs'
        default: 'NOT OVERRIDDEN'
        required: false
        type: string
      run_cli_system_tests:
        required: false
        default: 'true'
        description: 'Enable or disable CLI system tests'
        type: string
      run_api_system_tests:
        required: false
        default: 'true'
        description: 'Enable or disable API system tests'
        type: string
      run_s3mgrt_system_tests:
        required: false
        default: "true"
        description: 'Enable or disable S3 migration CLI system tests'
        type: string
      run_tokenomics_system_tests:
        required: false
        default: 'false'
        description: 'Enable or disable tokenomics system tests'
        type: string
      run_smoke_tests:
        required: false
        default: 'false'
        description: 'Run subset of system tests (smoke tests)'
        type: string
      run_frontend_tests:
        required: false
        default: 'false'
        description: 'Run frontend system tests (cypress tests)'
        type: string
      test_file_filter:
        description: 'Comma separated list of test files to run (eg. zwalletcli_register_wallet_test.go, zwalletcli_send_and_balance_test.go). If supplied, the PR will NOT be notified of the test result'
        default: ''
        required: false
        type: string
      skip_tests:
        description: '(LAST RESORT ONLY) Skip system tests. This will allow a PR to merge without requiring a green test run.  *By using you certify that the code being merged is not causing system tests to fail*'
        default: 'FALSE'
        required: false
        type: string
jobs:
  system-tests:
    timeout-minutes: 120
    runs-on: [ tests-suite ]
    steps:

    - uses: actions/checkout@v3

    - name: "Setup Test Run"
      run: |
        unset SHORT_SHA
        unset PR_ID
        unset TAG
        unset MERGE_SHORT_SHA

        if [ "${{ inputs.skip_tests }}" == "true" ];
          then
            echo SKIP_TESTS=true >> $GITHUB_ENV
          else
            echo SKIP_TESTS=false >> $GITHUB_ENV
        fi
        
        echo "NETWORK_URL=$(echo dev-${RUNNER_NAME:(-1)}.devnet-0chain.net)" >> $GITHUB_ENV
        echo "RUNNER_NUMBER=${RUNNER_NAME:(-1)}" >> $GITHUB_ENV

        echo "GOSDK_SHA=NONE" >> $GITHUB_ENV
        if [ "${{ inputs.gosdk_branch }}" != "NOT OVERRIDDEN" ]; then
           echo "GOSDK_SHA=$(curl --silent --fail -u ${{ secrets.SVC_ACCOUNT_SECRET }}:x-oauth-basic https://api.github.com/repos/0chain/gosdk/git/refs/heads/${{ inputs.gosdk_branch }} | jq --raw-output .object.sha)" >> $GITHUB_ENV
        fi

    - name: "Get docker images for feature branches"
      if: ${{ env.SKIP_TESTS != 'true' }}
      uses: 0chain/actions/get-latest-image-for-branch@enable-s3mgrt-only-tests
      id: get-images
      with:
        miner_sharder_branch: ${{ inputs.miner_branch }}
        blobber_validator_branch: ${{ inputs.blobber_branch }}
        authorizer_branch: ${{ inputs.authorizer_branch }}
        zbox_branch: ${{ inputs.zbox_branch }}
        zdns_branch: ${{ inputs.zdns_branch }}
        zs3server_branch:  ${{ inputs.zs3server_branch }}
        svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}

    - name: "Set PR status as pending"
      uses: 0chain/actions/notify-pull-request@enable-s3mgrt-only-tests
      if: ${{ inputs.test_file_filter == '' }}
      continue-on-error: true
      with:
        state: "pending"
        message: "manual run against [${{ inputs.system_tests_branch }}] tests"
        system_tests_branch: ${{ inputs.system_tests_branch }}
        zbox_cli_branch: ${{ inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ inputs.zwallet_cli_branch }}
        zerochain_branch: ${{ inputs.miner_branch }}
        blobber_branch: ${{ inputs.blobber_branch }}
        gosdk_branch: ${{ inputs.gosdk_branch }}
        zbox_branch: ${{ inputs.zbox_branch }}
        zdns_branch: ${{ inputs.zdns_branch }}
        authorizer_branch: ${{ inputs.authorizer_branch }}
        skip_tests: ${{ env.SKIP_TESTS }}
        github_token: ${{ secrets.SVC_ACCOUNT_SECRET }}

    - name: "Deploy 0Chain"
      if: ${{ env.SKIP_TESTS != 'true' }}
      uses: 0chain/actions/deploy-0chain@enable-s3mgrt-only-tests
      with:
        repo_snapshots_branch: ${{ inputs.repo_snapshots_branch }}
        kube_config: ${{ secrets[format('DEV{0}KC', env.RUNNER_NUMBER)] }}
        teardown_condition: "TESTS_PASSED"
        miner_image:  ${{ steps.get-images.outputs.miner-tag }}
        sharder_image: ${{ steps.get-images.outputs.sharder-tag }}
        blobber_image: ${{ steps.get-images.outputs.blobber-tag }}
        validator_image: ${{ steps.get-images.outputs.validator-tag }}
        authorizer_image: ${{ steps.get-images.outputs.authorizer-tag }}
        zbox_image: ${{ steps.get-images.outputs.zbox-tag }}
        zdns_image: ${{ steps.get-images.outputs.zdns-tag }}
        zbox_cli_branch: ${{ inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ inputs.zwallet_cli_branch }}
        custom_go_sdk_version: ${{ env.GOSDK_SHA }}
        TENDERLY_FORK_ID: ${{ secrets.TENDERLY_FORK_ID }}
        SUBGRAPH_API_URL: ${{ secrets.SUBGRAPH_API_URL }}
        zs3_client: ${{ steps.get-images.outputs.blimp_clientapi-tag }}
        zs3_logsearchapi: ${{ steps.get-images.outputs.blimp_logsearchapi-tag }}
        zs3_minio:  ${{ steps.get-images.outputs.blimp_minioserver-tag }}
        graphnode_sc: ${{ secrets.GRAPHNODE_SC }}
        graphnode_network: ${{ secrets.GRAPHNODE_NETWORK }}
        graphnode_ethereum_node_url: ${{ secrets.GRAPHNODE_ETHEREUM_NODE_URL }}
        svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}

    - name: "Run System tests"
      if: ${{ env.SKIP_TESTS != 'true' }}
      uses: 0chain/actions/run-system-tests@enable-s3mgrt-only-tests
      with:
        repo_snapshots_branch: ${{ inputs.repo_snapshots_branch }}
        system_tests_branch: ${{ inputs.system_tests_branch }}
        network: ${{ env.NETWORK_URL }}
        zbox_cli_branch: ${{ inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ inputs.zwallet_cli_branch }}
        custom_go_sdk_version: ${{ env.GOSDK_SHA }}
        svc_account_secret: ${{ secrets.SVC_ACCOUNT_SECRET }}
        deploy_report_page: false
        archive_results: true
        run_flaky_tests: false
        retry_failures: true
        test_file_filter: ${{ inputs.test_file_filter }}
        run_cli_system_tests: ${{ inputs.run_cli_system_tests }}
        run_api_system_tests: ${{ inputs.run_api_system_tests }}
        run_s3mgrt_system_tests: ${{ inputs.run_s3mgrt_system_tests }}
        run_tokenomics_system_tests: ${{ inputs.run_tokenomics_system_tests }}
        run_smoke_tests: ${{ inputs.run_smoke_tests }}
        run_frontend_tests: ${{ inputs.run_frontend_tests }}
        TENDERLY_FORK_ID: ${{ secrets.TENDERLY_FORK_ID }}
        DEVOPS_CHANNEL_WEBHOOK_URL: ${{ secrets.DEVOPS_CHANNEL_WEBHOOK_URL }}
        S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        s3_migration_cli_branch: ${{ inputs.s3_migration_cli_branch }}
        
    - name: "Runner tidy up"
      if: always()
      continue-on-error: true
      run: rm -rf ./*

    - name: "Set PR status as ${{ job.status }}"
      if: ${{ (success() || failure() || cancelled()) && inputs.test_file_filter == '' }}
      uses: 0chain/actions/notify-pull-request@enable-s3mgrt-only-tests
      continue-on-error: true
      with:
        state: ${{ job.status }}
        message: "manual run against [${{ inputs.system_tests_branch }}]. Smoke tests [${{ inputs.run_smoke_tests }}]"
        system_tests_branch: ${{ inputs.system_tests_branch }}
        zbox_cli_branch: ${{ inputs.zbox_cli_branch }}
        zwallet_cli_branch: ${{ inputs.zwallet_cli_branch }}
        zerochain_branch: ${{ inputs.miner_branch }}
        blobber_branch: ${{ inputs.blobber_branch }}
        gosdk_branch: ${{ inputs.gosdk_branch }}
        zbox_branch: ${{ inputs.zbox_branch }}
        zdns_branch: ${{ inputs.zdns_branch }}
        authorizer_branch: ${{ inputs.authorizer_branch }}
        skip_tests: ${{ env.SKIP_TESTS }}
        github_token: ${{ secrets.SVC_ACCOUNT_SECRET }}
