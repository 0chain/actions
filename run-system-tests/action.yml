name: "0Chain System Tests"
description: "Run 0Chain System Tests"
inputs:
  system_tests_branch:
    required: false
    description: 'System tests branch to run'
  network:
    required: true
    description: 'Network to run system tests against INSTEAD OF DEPLOYING A NEW NETWORK. [example: dev.0chain.net]'
  zbox_cli_branch:
    required: true
    description: '0Box CLI (branch or commit SHA) which the tests will use'
    default: 'staging'
  zwallet_cli_branch:
    required: true
    description: '0Wallet CLI (branch or commit SHA) which the tests will use'
    default: 'staging'
  smart_contract_owner_wallet_json:
    required: true
    description: 'smart contract owner wallet, used in smart contract config tests'
  deploy_report_page:
    required: true
    default: "true"
    description: ''
  archive_results:
    required: true
    default: "true"
    description: ''
  run_flaky_tests:
    required: true
    default: "true"
    description: ''
  retry_failures:
    required: true
    default: "true"
    description: 'retry failing tests up to 3 times. will not retry when >10 tests have failed as this suggests a wider issue'
  svc_account_secret:
    required: false
    description: 'secret used to publish test results - will use your own credentials if not supplied'
  custom_go_sdk_version:
    required: false
    description: 'custom gosdk version. Will upgrade CLI branches with this before running tests'

runs:
  using: "composite"
  steps:
    - name: "Config: Run tests against 0Chain network"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo "SYSTEM_TESTS_BRANCH=$(echo $(([ -z '${{inputs.system_tests_branch}}' ] && echo  ${GITHUB_REF#refs/*/}) || echo '${{inputs.system_tests_branch}}'))" >> $GITHUB_ENV
        echo "NETWORK_URL=$(echo ${{ inputs.network }})" >> $GITHUB_ENV
        echo "ZBOX_BRANCH=$(echo ${{inputs.zbox_cli_branch}})" >> $GITHUB_ENV
        echo "ZWALLET_BRANCH=$(echo ${{inputs.zwallet_cli_branch}})" >> $GITHUB_ENV

    - name: "VIEW TEST CONFIGURATION"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "RUNNING SYSTEM TESTS WITH THE FOLLOWING CONFIGURATION:"
        echo "======================================================"
        echo
        echo "System tests branch:    [${{ env.SYSTEM_TESTS_BRANCH }}]"
        echo "0Chain network URL:     [${{ env.NETWORK_URL }}]"
        echo "0box CLI branch:        [${{ env.ZBOX_BRANCH }}]"
        echo "0wallet CLI branch:     [${{ env.ZWALLET_BRANCH }}]"
        echo "Custom gosdk version:   [${{ inputs.custom_go_sdk_version }}]"

    - name: "Checkout System Tests"
      uses: actions/checkout@v2
      with:
        repository: "0chain/system_test"
        ref: ${{ env.SYSTEM_TESTS_BRANCH }}


#    - name: "Get CLI Cache Key"
#      shell: 'script --return --quiet --command "bash {0}"'
#      run: |
#        if [[ '${{ env.ZWALLET_BRANCH }}' =~ ^[a-f0-9]{40}$ ]];
#          then
#            echo ZWALLET_SHA=${{ env.ZWALLET_BRANCH }} >> $GITHUB_ENV
#          else
#           echo ZWALLET_SHA=$(curl --silent --fail https://api.github.com/repos/0chain/zwalletcli/git/refs/heads/${{ env.ZWALLET_BRANCH }} | jq --raw-output .object.sha) >> $GITHUB_ENV
#        fi
#
#        if [[ '${{ env.ZBOX_BRANCH }}' =~ ^[a-f0-9]{40}$ ]];
#          then
#            echo ZBOX_SHA=${{ env.ZBOX_BRANCH }} >> $GITHUB_ENV
#          else
#           echo ZBOX_SHA=$(curl --silent --fail https://api.github.com/repos/0chain/zboxcli/git/refs/heads/${{ env.ZBOX_BRANCH }} | jq --raw-output .object.sha) >> $GITHUB_ENV
#        fi
#
#    - name: "Cache CLI Binaries"
#      id: cli-cache
#      uses: actions/cache@v2
#      with:
#        path: |
#          tests/cli_tests/zbox
#          tests/cli_tests/zwallet
#        key: cli-cache-${{ runner.os }}-${{ env.ZWALLET_SHA }}-${{ env.ZBOX_SHA }}-v3

    - name: "Checkout 0wallet CLI"
#      if: steps.cli-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.ZWALLET_BRANCH }}
        repository: 0chain/zwalletcli
        fetch-depth: 1
        path: ./zwalletcli

    - name: "Checkout 0box CLI"
#      if: steps.cli-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        ref: ${{ env.ZBOX_BRANCH }}
        repository: 0chain/zboxcli
        fetch-depth: 1
        path: ./zboxcli

    - name: "Setup Go"
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.2

    - name: "Install dependencies"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "INSTALL REQUIRED DEPENDENCIES"
        echo "======================================================"
        echo
        echo "installing youtube-dl..."
        sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl > build.log 2>&1 || { cat build.log && echo "::error title=Failed to install test dependency::failed to install youtube-dl" && exit 1; }
        sudo chmod a+rx /usr/local/bin/youtube-dl
        echo "installing ffmpeg..."
        sudo apt update > build.log 2>&1 || { cat build.log && exit 1; }
        sudo apt install -y ffmpeg > build.log 2>&1 || { cat build.log && echo "::error title=Failed to install test dependency::failed to install ffmpeg" && exit 1; }
        echo "Test dependencies install SUCCESS!"

    - name: "Build CLI Binaries"
#      if: steps.cli-cache.outputs.cache-hit != 'true'
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "BUILDING 0WALLET AND 0BOX CLI BINARIES:"
        echo "======================================================"
        echo
        echo "Building zwalletcli [${{ env.ZWALLET_BRANCH }}]..."
        cd zwalletcli
        if [[ -n "${{ inputs.custom_go_sdk_version }}" && "${{ inputs.custom_go_sdk_version }}" != "NONE" ]];
        then
          echo "Upgrading zwalletcli to GOSDK [${{ inputs.custom_go_sdk_version }}]"
          go get github.com/0chain/gosdk@${{ inputs.custom_go_sdk_version }} || { echo "::error title=Failed to retrieve gosdk::failed to retrieve gosdk [${{ inputs.custom_go_sdk_version }}]" && exit 1; }
          go mod tidy || { echo "::error title=Failed to upgrade gosdk on zwallet CLI::failed to upgrade zwallet CLI gosdk to [${{ inputs.custom_go_sdk_version }}]" && exit 1; }
        fi
        make install > build.log 2>&1 || { cat build.log && echo "::error title=zwallet CLI build failed::zwallet CLI build failed" && exit 1; }
        mv zwallet ../tests/cli_tests
        echo "Building zboxcli [${{ env.ZBOX_BRANCH }}]..."
        cd ../zboxcli
        if [[ -n "${{ inputs.custom_go_sdk_version }}" && "${{ inputs.custom_go_sdk_version }}" != "NONE" ]];
        then
          echo "Upgrading zboxcli to GOSDK [${{ inputs.custom_go_sdk_version }}]"
          go get github.com/0chain/gosdk@${{ inputs.custom_go_sdk_version }} || { echo "::error title=Failed to retrieve gosdk::failed to retrieve gosdk [${{ inputs.custom_go_sdk_version }}]" && exit 1; }
          go mod tidy || { echo "::error title=Failed to upgrade gosdk on zbox CLI::failed to upgrade zbox CLI gosdk to [${{ inputs.custom_go_sdk_version }}]" && exit 1; }
        fi
        make install > build.log 2>&1 || { cat build.log && echo "::error title=zbox CLI build failed::zbox CLI build failed" && exit 1; }
        mv zbox ../tests/cli_tests
        echo "CLI build SUCCESS!"

    - name: "Set up system tests"
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "SETTING UP SYSTEM TESTS:"
        echo "======================================================"
        echo
        if [ "${{ inputs.retry_failures }}" == "true" ];
           then
              echo SHOULD_RETRY_FAILURES='--rerun-fails --rerun-fails-max-failures=25' >> $GITHUB_ENV
          else
              echo SHOULD_RETRY_FAILURES='' >> $GITHUB_ENV
        fi

        BRANCH_DIR=$(echo $([ -z '${{ github.event.pull_request.head.sha }}' ] && echo ${GITHUB_REF#refs/*/} || echo $GITHUB_HEAD_REF) |  sed 's/\//_/g')
        echo "BRANCH_DIR=$BRANCH_DIR" >> $GITHUB_ENV
        echo "TEST_TIME=$(date '+%Y-%m-%d_%H.%M.%S')" >> $GITHUB_ENV
        go get gotest.tools/gotestsum
        go get github.com/vakenbolt/go-test-report
        cd tests/cli_tests
        mkdir -p ${BRANCH_DIR}/${GITHUB_SHA}/flaky
        sed "s,block_worker:.*,block_worker: https://${{ env.NETWORK_URL }}/dns," -i ./config/zbox_config.yaml
        printf '#!/bin/bash\nset -o pipefail\n[ -z "$1" ] && TESTS_TO_RUN="-run  ^Test[^___]*$ ./..." || TESTS_TO_RUN=$1\nCONFIG_PATH=./zbox_config.yaml go test -timeout=60m $TESTS_TO_RUN -json -count=1 | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)|(\\"Test\\":\\".*\/[pP]arallel\\")/d"' > TEST_RUNNER_COMMAND.sh && chmod 777 TEST_RUNNER_COMMAND.sh
        printf '#!/bin/bash\nset -o pipefail\nCONFIG_PATH=./zbox_config.yaml go test -timeout=60m -run  "^Test___Flaky.*$" ./... -json -count=1 | sed -r "/(=== (CONT|RUN|PAUSE).*)|(--- FAIL:.*)|(\\"Test\\":\\".*\/[pP]arallel\\")/d"' > FLAKY_TEST_RUNNER_COMMAND.sh && chmod 777 FLAKY_TEST_RUNNER_COMMAND.sh
        (./zwallet version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZWallet Version Info:/") || true
        (./zbox version --configDir ./config --config ./zbox_config.yaml --wallet ../ignore --silent | grep -A2 'Version info' | sed "s/Version info:/ZBox Version Info:/") || true

    - name: "Run CLI System Tests"
      shell: 'script --return --quiet --command "bash {0}"'
      env:
        SMART_CONTRACT_OWNER_WALLET_JSON: ${{ inputs.smart_contract_owner_wallet_json }}
      run: |
        echo
        echo "======================================================"
        echo "RUNNING SYSTEM TESTS:"
        echo "======================================================"
        echo
        cd tests/cli_tests
        exit_code=0

        echo '::echo::off'
         if [[ "${{ env.NETWORK_URL }}" == "dev-3.devnet-0chain.net" || "${{ env.NETWORK_URL }}" == "dev-4.devnet-0chain.net" || "${{ env.NETWORK_URL }}" == "dev-5.devnet-0chain.net" || "${{ env.NETWORK_URL }}" == "dev-1.devnet-0chain.net" || "${{ env.NETWORK_URL }}" == "dev-2.devnet-0chain.net" ]];
          then
            echo "$SMART_CONTRACT_OWNER_WALLET_JSON" >> ./config/sc_owner_wallet.json
            echo '{"client_id": "591d6d0d5642bdbc924756ca2647b4b59adce0acd02a487ecc4d1bd4669293a8","client_key": "ac8798bcadd5ce5ea14f4745850eec61aa080e6fedc1d769af95c42e0079ba03ee9710e9dc966f7c5eb9cd6ef9184af51869d5a345b9520e507aa55ba22bf902","keys": [{"public_key": "ac8798bcadd5ce5ea14f4745850eec61aa080e6fedc1d769af95c42e0079ba03ee9710e9dc966f7c5eb9cd6ef9184af51869d5a345b9520e507aa55ba22bf902","private_key": "fbdc0bcc12168588e2def826b7ee9d8b4c6f1fbacf22ee5064b7db49482b8f0d"}],"mnemonics": "economy day fan flower between rebuild valid bid catch bargain vivid hybrid room permit check manage mean twelve damage summer close churn boat either","version": "1.0","date_created": "2021-12-04T17:03:37Z"}' >> ./config/blobber_owner_wallet.json
        fi

        if [[ "${{ env.NETWORK_URL }}" == "dev-3.devnet-0chain.net" ]];
         then
            echo '{"client_id": "9513317a9d51fcc86dd4f51d04bf7a1955d9c85e6d4ea19d6181fd6d5a57d582","client_key": "1d1cce42c17b96421ce96151446bf956fb928ed881e4d127a89142274956800bb1e66a7efc8f3c614485b27d98ca54e3f0cafaee572fd2dc660776a1e373d81a","keys": [{"public_key": "1d1cce42c17b96421ce96151446bf956fb928ed881e4d127a89142274956800bb1e66a7efc8f3c614485b27d98ca54e3f0cafaee572fd2dc660776a1e373d81a","private_key": "39225509246fcf4df238a2e72215c3782ce95e366fda4dfa7073e54b3316f506"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/miner_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-4.devnet-0chain.net" ]];
          then
            echo '{"client_id": "71153882fcef802ae41ca105a1cded31f1521dd0e5b8aecc696f0f976bd883fd","client_key": "f5ce18aef27a7508e9379e511d58b7526afea854f341dec08c97ebe59bb07a0c49ac7d529e683aa8234a324e9ead924ae62aa5b4c6069b0f9a3015ffeac1b381","keys": [{"public_key": "f5ce18aef27a7508e9379e511d58b7526afea854f341dec08c97ebe59bb07a0c49ac7d529e683aa8234a324e9ead924ae62aa5b4c6069b0f9a3015ffeac1b381","private_key": "1a04676d597e99b1d091b9abe0cb449c2f175fa95ea30eaa020055592528811c"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/miner_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-5.devnet-0chain.net" ]];
          then
            echo '{"client_id": "7de24faca8d50973a823a1ade8eed0e13da1b311f6f374958e9f746b18bc57dc","client_key": "0d486cee0ee892d29920c5e5c2b312903cbdfbe0f5d59b6b49fd8f8b496111224eeae8ac4abaddf9a2d8a40b4d73e156ed7ac66a2803e950f122684585ed7786","keys": [{"public_key": "0d486cee0ee892d29920c5e5c2b312903cbdfbe0f5d59b6b49fd8f8b496111224eeae8ac4abaddf9a2d8a40b4d73e156ed7ac66a2803e950f122684585ed7786","private_key": "7ec4c845ba4842b6a7dbb40be6b081d19c0da5fb073bb1c7c8dcc8799bd78f10"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/miner_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-1.devnet-0chain.net" ]];
          then
            echo '{"client_id": "6fec9594da525a7fecad3251da0b25376a9a67dcee0c2b2d00ba23981af2ff61","client_key": "cd59094e90da3665b362e8653071c293afe301d1c63c6767e5b8ff4a17a21c216391179135c20ca8683c12762ecfe23f81002466ed81a225df9141bfaf44390b","keys": [{"public_key": "cd59094e90da3665b362e8653071c293afe301d1c63c6767e5b8ff4a17a21c216391179135c20ca8683c12762ecfe23f81002466ed81a225df9141bfaf44390b","private_key": "bf0a69c8649f155bfab48e070cb41513e830a9f0d7bfc6180f9b6a7eea282301"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/miner_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-2.devnet-0chain.net" ]];
          then
            echo '{"client_id": "b7db864a8dc1c2ba2fee594ab1c51e80d0973b7c46f8c8a5a5b8c3b5c19d4189","client_key": "e26e272e07d9d1c09607ac9f7377c1971996850e36af8b23428da842fe176015c22f555762417d1a71e88639de53f3c8a73559b777333aead91a02cdc996869b","keys": [{"public_key": "e26e272e07d9d1c09607ac9f7377c1971996850e36af8b23428da842fe176015c22f555762417d1a71e88639de53f3c8a73559b777333aead91a02cdc996869b","private_key": "9e80debedd1e32a39d589c60991afcc259ab4ea4cc46d7bce361d846e1bb4021"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/miner_node_delegate_wallet.json
        fi
        if [[ "${{ env.NETWORK_URL }}" == "dev-3.devnet-0chain.net" ]];
          then
            echo '{"client_id": "25b0acfc786c7bb78be6b06fbb21e7b78f7dc3377b125cef896a302243b56a48","client_key": "e77ccc890cedd0c9f901a923b05dade0aa0683589f9aae83fda91643c5fa2305d400f9fa0321ee6ee254ac76bca49a40690821e836d06c7c54a1754f53c87480","keys": [{"public_key": "e77ccc890cedd0c9f901a923b05dade0aa0683589f9aae83fda91643c5fa2305d400f9fa0321ee6ee254ac76bca49a40690821e836d06c7c54a1754f53c87480","private_key": "58b67689552e85908bd2203445d68a5b3befbb00a201e16cde7bba17da8e7e1b"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/sharder_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-4.devnet-0chain.net" ]];
          then
            echo '{"client_id": "813b581a82f598bbc878e8c89639756586b0035891627414e6af8421960b7d06","client_key": "05e3b9552cab3e0a5034b95e90af9c2017585bf09c34337f259b8134db152509758a80dd10187fb38b6d64bf66baada84ce4a70fcc76ed3c4a194bb0b948e10a","keys": [{"public_key": "05e3b9552cab3e0a5034b95e90af9c2017585bf09c34337f259b8134db152509758a80dd10187fb38b6d64bf66baada84ce4a70fcc76ed3c4a194bb0b948e10a","private_key": "e178cf30e6e2cdc359a9a1115153700e0b165e2f31d70a9c6677808ece48e405"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/sharder_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-5.devnet-0chain.net" ]];
          then
            echo '{"client_id": "86ce36a103deaff6c6e89ec00f81d6f05e6ad6496710afcc7e603e8300edf929","client_key": "5a55b3814bf81a15b4402a37fbb015eb18db04a8bbfae884c907e8f83ca3b723a3cfd578cee08e2d32fec7d66ef1df5bd44f0681e85a37601e8af660e1336014","keys": [{"public_key": "5a55b3814bf81a15b4402a37fbb015eb18db04a8bbfae884c907e8f83ca3b723a3cfd578cee08e2d32fec7d66ef1df5bd44f0681e85a37601e8af660e1336014","private_key": "6c6672b5f26642ae27b85a1944b9e0c52bad01b5fe94a4a15ef4ab1e91222a0f"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/sharder_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-1.devnet-0chain.net" ]];
          then
            echo '{"client_id": "7e30803d42bcb617422f0027b72f0f7ad8ba969bb5afc0de3b8aad47a3fd5ef0","client_key": "15f12694de38e76ec60f655770bb453be303793e9a3c1cf7fdeb61ddab92ef1655b11e4c687e8d7a6699f336e5b861fb34a5f220853a77c5587035f780efb581","keys": [{"public_key": "15f12694de38e76ec60f655770bb453be303793e9a3c1cf7fdeb61ddab92ef1655b11e4c687e8d7a6699f336e5b861fb34a5f220853a77c5587035f780efb581","private_key": "e2e1a7d172068a78c4d79194caed7d9d82108af648a607c3b54cd2504244be14"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/sharder_node_delegate_wallet.json
          elif [[ "${{ env.NETWORK_URL }}" == "dev-2.devnet-0chain.net" ]];
          then
            echo '{"client_id": "5063a8df7ffb7cb150e51d19b4dd0ac93348ad77d6e994525baddc23ed8a452f","client_key": "e05eea421964033a821ff8008509b6d750ceb6764409c29f542c05bc7c15d30b6edb73e34a5edc250573125808250fbf8eeb5d1c83db76bdb456c763fb831783","keys": [{"public_key": "e05eea421964033a821ff8008509b6d750ceb6764409c29f542c05bc7c15d30b6edb73e34a5edc250573125808250fbf8eeb5d1c83db76bdb456c763fb831783","private_key": "2e6a7571cc31c974fde8a527eb1464cb2db3db3ac63436cb36c3a4084e2bb11a"}],"mnemonics": "ugly train lock tomorrow garden sweet market marble mouse icon visit gather damp hair mother under into robot machine ahead science distance rescue enjoy","version": "1.0","date_created": "2021-12-08 17:58:02.329290633 +0100 CET m=+0.002796956"}' >> ./config/sharder_node_delegate_wallet.json
        fi
        echo '::echo::on'

        ~/go/bin/gotestsum --jsonfile test-output.json --hide-summary=output --format testname ${{ env.SHOULD_RETRY_FAILURES }} --raw-command -- ./TEST_RUNNER_COMMAND.sh || exit_code=$?
        cat test-output.json | ~/go/bin/go-test-report --groupSize 1 --output ${{ env.BRANCH_DIR }}/${GITHUB_SHA}/index.html --title "0Chain System test suite [${{ env.BRANCH_DIR }}/${GITHUB_SHA:0:8}] ran against [${{ env.NETWORK_URL }}] at [${{ env.TEST_TIME }}]"

        cp -R ./${{ env.BRANCH_DIR }}/${GITHUB_SHA} ./${{ env.BRANCH_DIR }}/latest
        echo "TESTS_RAN=true" >> $GITHUB_ENV

        if [[ $exit_code == 0 ]];
          then
            echo TESTS_PASSED=true >> $GITHUB_ENV
          else
            echo TESTS_PASSED=false >> $GITHUB_ENV
            echo "::error title=System tests faled!::System tests failed. Ensure tests are running against the correct images/branches and rule out any possible code issues before attempting a re-run"
        fi

        exit $exit_code

    - name: "Archive CLI Config & Console Output"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.archive_results == 'true' }}
      uses: actions/upload-artifact@v2
      with:
        name: System-Test-${{ env.TEST_TIME }}
        path: |
          ./tests/cli_tests/config
          ./tests/cli_tests/cmdlog.log
          ./tests/cli_tests/${{ env.BRANCH_DIR }}/latest/index.html

    - name: "Run Flaky CLI System Tests"
      if:  ${{ env.TESTS_PASSED == 'true' && inputs.run_flaky_tests == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "RUNNING FLAKY SYSTEM TESTS:"
        echo "======================================================"
        echo
        cd tests/cli_tests
        rm -rf cmdlog.log || true
        rm -rf test-output.json || true
        ~/go/bin/gotestsum --jsonfile test-output.json --hide-summary=output --format testname --raw-command -- ./FLAKY_TEST_RUNNER_COMMAND.sh || true
        cat test-output.json | ~/go/bin/go-test-report --groupSize 1 --output ${{ env.BRANCH_DIR }}/${GITHUB_SHA}/flaky/index.html --title "0Chain Flaky system test suite [${{ env.BRANCH_DIR }}/${GITHUB_SHA:0:8}] ran against [${{ env.NETWORK_URL }}] at [${{ env.TEST_TIME }}]"
        cp -R ./${{ env.BRANCH_DIR }}/${GITHUB_SHA}/flaky ./${{ env.BRANCH_DIR }}/latest/flaky
        echo "FLAKY_TESTS_RAN=true" >> $GITHUB_ENV

    - name: "Archive Flaky Test CLI Config & Console Output"
      if: ${{ always() && env.FLAKY_TESTS_RAN == 'true' && inputs.archive_results  == 'true'}}
      uses: actions/upload-artifact@v2
      with:
        name: Flaky-System-Test-${{ env.TEST_TIME }}
        path: |
          ./tests/cli_tests/config
          ./tests/cli_tests/cmdlog.log
          ./tests/cli_tests/${{ env.BRANCH_DIR }}/latest/flaky/index.html

    - name: "Deploy report pages"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: test_reports
        keep_files: true
        github_token: "${{ inputs.svc_account_secret }}"
        publish_dir: "./tests/cli_tests/${{ env.BRANCH_DIR }}"
        destination_dir: "./${{ env.BRANCH_DIR }}"
        user_name: "github-actions[bot]"
        user_email: "github-actions[bot]@users.noreply.github.com"

    - name: "Wait for report deployment to complete"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: counter=0; while [ $counter -lt 5 ] && curl -o /dev/null -Isw '%{http_code}\n' "https://0chain.github.io/${{ github.event.repository.name }}/${{ env.BRANCH_DIR }}/${GITHUB_SHA}/index.html?t=$(date +%s)" | grep -v 200 > /dev/null; do sleep 10 && echo "Waiting for report page to deploy..." && ((counter=counter+1)); done

    - name: "Report Links"
      if: ${{ always() && env.TESTS_RAN == 'true' && inputs.deploy_report_page == 'true' }}
      shell: 'script --return --quiet --command "bash {0}"'
      run: |
        echo
        echo "======================================================"
        echo "SYSTEM TESTS HTML REPORTS:"
        echo "======================================================"
        echo
        echo "::notice title=System tests report::System tests report: https://0chain.github.io/${{ github.event.repository.name }}/${{ env.BRANCH_DIR }}/${GITHUB_SHA}/index.html"
        if [ "${{ env.FLAKY_TESTS_RAN }}" == "true" ];
           then
              echo "::notice title=Flaky system tests report::Flaky system tests report: https://0chain.github.io/${{ github.event.repository.name }}/${{ env.BRANCH_DIR }}/${GITHUB_SHA}/flaky/index.html"
        fi
